services:
  users:
    container_name: users-api
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: yarn dev users
    env_file:
      - ./apps/users/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - mailer
      - rabbitmq
    ports:
      - '3000:3000'

  mailer:
    container_name: mailer-service
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: development
    command: yarn dev mailer
    env_file:
      - ./apps/mailer/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
      - '5672:5672'

  mongodb-primary:
    container_name: mongodb-primary
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    ports:
      - '27017:27017'

  mongodb-secondary:
    container_name: mongodb-secondary
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    container_name: mongodb-arbiter
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

volumes:
  mongodb_master_data:
    driver: local
