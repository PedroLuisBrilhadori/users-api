services:
  users:
    container_name: users-api
    restart: always
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
      target: development
    command: yarn test:e2e
    env_file:
      - ./apps/users/.env
    depends_on:
      mongodb-primary:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      mailer:
        condition: service_healthy
    ports:
      - '3000:3000'

  mailer:
    container_name: mailer-service
    build:
      context: .
      dockerfile: ./apps/mailer/Dockerfile
      target: development
    command: yarn dev mailer
    env_file:
      - ./apps/mailer/.env
    ports:
      - '3001:3001'
    healthcheck:
      test: ['CMD', 'wget', '-qO- ', 'http://localhost:3001/mailer/health']
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 15s
    depends_on:
      mongodb-primary:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    ports:
      - '5672:5672'
    healthcheck:
      test: ['CMD', '/bin/bash', '/usr/app/rabbit/healthy.sh']
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s
    volumes:
      - ./volumes/rabbit-healthy.sh:/usr/app/rabbit/healthy.sh

  mongodb-primary:
    container_name: mongodb-primary
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    ports:
      - '27017:27017'
    volumes:
      - 'mongodb_master_data:/bitnami/mongodb'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb://root:password123@localhost:27017/ --quiet
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 20s

  mongodb-secondary:
    container_name: mongodb-secondary
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    container_name: mongodb-arbiter
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

volumes:
  mongodb_master_data:
    driver: local
